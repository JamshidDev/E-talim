[{"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\index.js":"1","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\App.js":"2","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Quiz.js":"3","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\ResultTest.js":"4","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\BottomNavbar.js":"5","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Result.js":"6","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Pages\\QuizSetting.js":"7","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\SmsVerification.js":"8","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\NewPassword.js":"9","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Singup.js":"10","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Repassword.js":"11","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Login.js":"12","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\ErrorMessage.js":"13","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Question.js":"14","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Data\\Category.js":"15"},{"size":367,"mtime":1627882368042,"results":"16","hashOfConfig":"17"},{"size":2403,"mtime":1630819738172,"results":"18","hashOfConfig":"17"},{"size":3387,"mtime":1630674365865,"results":"19","hashOfConfig":"17"},{"size":317,"mtime":1630558492609,"results":"20","hashOfConfig":"17"},{"size":691,"mtime":1631112307170,"results":"21","hashOfConfig":"17"},{"size":1411,"mtime":1629726850098,"results":"22","hashOfConfig":"17"},{"size":2748,"mtime":1630409268218,"results":"23","hashOfConfig":"17"},{"size":4458,"mtime":1631813303440,"results":"24","hashOfConfig":"17"},{"size":2736,"mtime":1631813303440,"results":"25","hashOfConfig":"17"},{"size":5982,"mtime":1631813303440,"results":"26","hashOfConfig":"17"},{"size":4601,"mtime":1631813303440,"results":"27","hashOfConfig":"17"},{"size":5894,"mtime":1631946118236,"results":"28","hashOfConfig":"17"},{"size":436,"mtime":1629467947067,"results":"29","hashOfConfig":"17"},{"size":2516,"mtime":1629982020414,"results":"30","hashOfConfig":"17"},{"size":1137,"mtime":1629462334937,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1s8r0tg",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\index.js",[],["67","68"],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\App.js",["69","70"],"import React, { useState } from 'react';\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  BrowserRouter\n} from \"react-router-dom\";\nimport Login from './Components/Login';\nimport Repassword from \"./Components/Repassword\";\nimport SmsVerification from './Components/SmsVerification';\nimport NewPassword from './Components/NewPassword';\nimport Singup from './Components/Singup';\nimport Quiz from './Components/Quiz';\nimport Result from './Components/Result';\nimport ResultTest from './Components/ResultTest';\nimport QuizSetting from './Components/Pages/QuizSetting';\nimport BottomNavbar from './Components/BottomNavbar';\n\nfunction App() {\n\n  const [questions, setQuestions] = useState();\n  const [name, setName] = useState();\n  const [score, setScore] = useState(0);\n\n  const fetchQuestions = async (category = \"\", difficult = \"\") => {\n    const { data } = await axios.get(`https://opentdb.com/api.php?amount=10&category=${category}&difficulty=${difficult}&type=multiple`\n    );\n\n    setQuestions(data.results);\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n\n        <Route path=\"/quiz\" exact>\n          <Quiz \n           name ={name}\n           setName={setName}\n           fetchQuestions={fetchQuestions}\n          />\n        </Route>\n        <Route path=\"/result\" exact>\n          <Result \n           name={name}\n           questions={questions}\n           score={score}\n           setScore={setScore}\n           setQuestions={setQuestions}\n          />\n        </Route>\n        <Route path=\"/home\" exact>\n          <Login />\n        </Route>\n        <Route path=\"/singup\" exact>\n          <Singup />\n        </Route>\n        <Route path=\"/\" exact>\n          <QuizSetting />\n        </Route>\n        <Route path=\"/login\" exact>\n          <Login />\n        </Route>\n        <Route path=\"/resultTest\" exact>\n          <ResultTest\n          name={name} \n          score={score}\n          />\n        </Route>\n        <Route path=\"/repassword\" exact>\n          <Repassword />\n        </Route>\n        <Route path=\"/smsverification\" exact>\n          <SmsVerification />\n        </Route>\n        <Route path=\"/newpassword\" exact>\n          <NewPassword />\n        </Route>\n        <Route path=\"/bottomNavbar\" exact>\n          <BottomNavbar />\n        </Route>\n        </Switch>\n\n       \n\n\n\n      </BrowserRouter>\n\n    </>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Quiz.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\ResultTest.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\BottomNavbar.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Result.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Pages\\QuizSetting.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\SmsVerification.js",["71"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport smsVerification from \"../css/SmsVerification.module.css\";\r\nimport Uzbek from \"../imgs/uz.svg\";\r\nimport English from \"../imgs/eng.svg\";\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport {useHistory, Link } from \"react-router-dom\";\r\n\r\nfunction SmsVerification(){\r\n\r\n\r\n    const history = useHistory();\r\n    const [smsCode, setsmsCode] = useState(\"\");\r\n    const [errorMsg, setErrorMsg] = useState(false);\r\n    const [serverErr, setServerErr] = useState(false);\r\n    const [minutes, setMinutes]=useState(0); \r\n    const [seconds, setSeconds]=useState(0);\r\n\r\n    let time = new Date().getTime()+300000;\r\n    useEffect(() => {\r\n       \r\n        const interval = setInterval(() => {\r\n            \r\n            let nowTime = new Date().getTime();\r\n            let distance =time - nowTime;\r\n            setMinutes(Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)));\r\n            setSeconds(Math.floor((distance % (1000 * 60)) / 1000))\r\n            if(distance <0){\r\n                clearInterval(interval)\r\n                setMinutes(0);\r\n                setSeconds(0);\r\n            }\r\n        }, 1000);\r\n      }, []);\r\n    let isVerify =()=>{\r\n        console.log(smsCode.length===5);\r\n        if(!isNaN(+smsCode) && smsCode.length===5) return true;\r\n        else { setErrorMsg(true);setServerErr(false); return false}\r\n    }\r\n    const sendCode =(e)=>{\r\n       let isSms = isVerify()\r\n       let body ={smsCode}\r\n        if(isSms){\r\n            setErrorMsg(false);\r\n            setServerErr(false);\r\n            axios.post(\"https://jsonplaceholder.typicode.com/posts\", body)\r\n            .then((res) => { console.log(res); \r\n                history.push(\"/newpassword\")\r\n            })\r\n            .catch((err) => { console.log(err); setServerErr(true);  history.push(\"/newpassword\") })\r\n        }\r\n        else{\r\n\r\n            console.log(\"Error occured...\");\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <>\r\n             <div className={smsVerification.Login_container}>\r\n                <div className={smsVerification.login_box_center}>\r\n\r\n                    <div className={smsVerification.login_form}>\r\n                        {/* <h3 className={smsVerification.ws_mobile_logo}>E-TALIM</h3> */}\r\n                        <h3 className={smsVerification.log_title}>{minutes}:{seconds}</h3>\r\n                        <p className={smsVerification.log_info}>Ro'yhatdan o'tish uchun ***6004 raqamiga SMS xabar yuborildi. Ushbu kodni kiriting.</p>\r\n                        {errorMsg && <p className={smsVerification.repassword}>Sms ko'dingizni to'g'riligini tekshiring...</p>}\r\n                        {serverErr && <p className={smsVerification.repassword}>Noto'g'ri sms kod... </p>}\r\n                        <div className={smsVerification.input_container}>\r\n                            <div className={smsVerification.input_label}>\r\n                                    <EmailIcon className={smsVerification.sms_icon} />                   \r\n                            </div>\r\n                            <div className={smsVerification.input_data}>\r\n                                <input type=\"tel\" placeholder=\"SMS kodni kiriting\" onChange={(e)=>{setsmsCode(e.target.value)}}></input>\r\n                            </div>\r\n                        </div>\r\n                        <button className={smsVerification.btn_login} onClick={sendCode}>Tasdiqlash</button>\r\n                        <div className={smsVerification.chamge_language}>\r\n                            <img src={Uzbek} alt=\"not fount flag of uzb\" />\r\n                            <img src={English} alt=\"not fount flag of eng\"/>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div> \r\n\r\n                    <div className={smsVerification.login_sign_up}>\r\n                                <h3 className={smsVerification.ws_logo}>E-TALIM</h3>\r\n                                <p className={smsVerification.ws_info}>Bu tizim orqali siz o'z bilim darajangizni va \r\n                                    tendoshlaringiz bilimin tekshirib ko'rishga imkon\r\n                                 beradi.\r\n                                </p>\r\n                                <Link to=\"/singup\" className={smsVerification.btn_singup}>Ro'yhatdan o'tish</Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default SmsVerification;","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\NewPassword.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Singup.js",["72","73","74","75"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport singupstyle from \"../css/Singup.module.css\";\r\nimport Uzbek from \"../imgs/uz.svg\";\r\nimport English from \"../imgs/eng.svg\";\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Singup() {\r\n    const [RandomNumberOne, setRandomNumberOne] = useState(Math.floor(Math.random() * (9 - 1 + 1)) + 1);\r\n    const [RandomNumberTwo, setRandomNumberTwo] = useState(Math.floor(Math.random() * (9 - 1 + 1)) + 1);\r\n    const [TelNumber, setTelNumber] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [RePassword, setRePassword] = useState(\"\");\r\n    const [Robot, setRobot] = useState(0);\r\n    const [errMsg,setErrMsg]=useState(false);\r\n    const [serverErr,setServerErr]=useState(false);\r\n    let history = useHistory();\r\n\r\n\r\n\r\n    const formValidation = () => {\r\n        if (!isNaN(+TelNumber) && TelNumber.length) return true;\r\n        else {setErrMsg(true); return false}}\r\n\r\n\r\n    let submitData = e => {\r\n        e.preventDefault();\r\n        const isValid = formValidation();\r\n        let body = { Tell: TelNumber, pass: Password };\r\n        let isRobot = RandomNumberOne + RandomNumberTwo === +Robot;\r\n        let isPassTrue =Password===RePassword && Password.length;\r\n        if (isRobot && isValid && isPassTrue) {console.log(body);\r\n            axios.post(\"https://jsonplaceholder.typicode.com/posts\", body)\r\n                .then((res) => history.push(\"/login\") )\r\n                .catch((err) =>{console.log(err); setServerErr(true)});\r\n        }\r\n        else {setErrMsg(true); console.log(\"Iltimos formani to'g'ri to'ldiring\");}\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={singupstyle.Login_container}>\r\n                <div className={singupstyle.login_box_center}>\r\n\r\n                    <div className={singupstyle.login_form}>\r\n                        {/* <h3 className={singupstyle.ws_mobile_logo}>E-TALIM</h3> */}\r\n                        <h3 className={singupstyle.log_title}>Ro'yhatdan o'tish</h3>\r\n                        <p className={singupstyle.log_info}>Hurmatli foydalanuvchi, tizimdan foydalanish uchun telefon raqamingizni kiriting</p>\r\n                    \r\n                        <div className={singupstyle.input_container, singupstyle.mobile_version}>\r\n                            <button className={singupstyle.mobile_btn_sing} >Ro'yhatdan o'tish</button>\r\n                            <Link className={singupstyle.mobile_btn_log} to=\"/login\">Kirish</Link>\r\n                        </div>\r\n                        {errMsg && <p className={singupstyle.repassword}>Iltimos malumotlaringizni to'g'riligini tekshiring... </p>}\r\n                        {serverErr && <p className={singupstyle.repassword}>Bu telefon raqam allaqachon ro'yhatdan o'tgan</p>}\r\n                        <div className={singupstyle.input_container}>\r\n                            <div className={singupstyle.input_label}>\r\n                                <span>+998</span>\r\n                            </div>\r\n                            <div className={singupstyle.input_data}>\r\n                                <input type=\"_tel\"placeholder=\"Telefon\" onChange={(e) => { setTelNumber(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className={singupstyle.input_container}>\r\n                            <div className={singupstyle.input_label}>\r\n                                <LockIcon className={singupstyle.lock_icon} />\r\n                            </div>\r\n                            <div className={singupstyle.input_data}>\r\n                                <input type=\"_password\" placeholder=\"Parol\" onChange={(e) => { setPassword(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={singupstyle.input_container}>\r\n                            <div className={singupstyle.input_label}>\r\n                                <LockIcon className={singupstyle.lock_icon} />\r\n                            </div>\r\n                            <div className={singupstyle.input_data}>\r\n                                <input type=\"_password\" placeholder=\"Qayta kiriting parolni\" onChange={(e) => { setRePassword(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={singupstyle.input_container}>\r\n                            <div className={singupstyle.input_label}>\r\n                                <span>{RandomNumberOne} + {RandomNumberTwo}</span>\r\n                            </div>\r\n                            <div className={singupstyle.input_data}>\r\n                                <input type=\"text\" placeholder=\"Natija\" onChange={(e) => { setRobot(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button className={singupstyle.btn_login} onClick={submitData}>RO'YHATDAN O'TISH</button>\r\n                        <div className={singupstyle.chamge_language}>\r\n                            <img src={Uzbek} alt=\"uzbekistan\" />\r\n                            <img src={English} alt=\"English\" />\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className={singupstyle.login_sign_up}>\r\n                        <h3 className={singupstyle.ws_logo}>E-TALIM</h3>\r\n                        <p className={singupstyle.ws_info}>Bu tizim orqali siz o'z bilim darajangizni va\r\n                            tendoshlaringiz bilimin tekshirib ko'rishga imkon\r\n                            beradi.\r\n                        </p>\r\n                        <Link className={singupstyle.btn_singup} to=\"/login\">Kirish</Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Singup;","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Repassword.js",["76","77","78","79","80"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport RepasswordStyle from \"../css/Repassword.module.css\";\r\nimport Uzbek from \"../imgs/uz.svg\";\r\nimport English from \"../imgs/eng.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Repassword() {\r\n\r\n    const history = useHistory();\r\n    const [TelNumber, setTelNumber] = useState(\"\");\r\n    const [Robot, setRobot] = useState(0);\r\n    const [errorMsg, setErrorMsg] = useState(false);\r\n    const [serverErr, setServerErr] = useState(false);\r\n\r\n    const [RandomNumberOne, setRandomNumberOne] = useState(Math.floor(Math.random() * (9 - 1 + 1)) + 1);\r\n    const [RandomNumberTwo, setRandomNumberTwo] = useState(Math.floor(Math.random() * (9 - 1 + 1)) + 1);\r\n\r\n\r\n    const formValidation = () => {\r\n        if (!isNaN(+TelNumber) && TelNumber.length) {\r\n            return true\r\n        }\r\n        else { setErrorMsg(true); return false }\r\n    }\r\n\r\n    let submitData = e => {\r\n        e.preventDefault();\r\n        const isValid = formValidation();\r\n\r\n        let body = { Tell: TelNumber };\r\n        let isRobot = RandomNumberOne + RandomNumberTwo === +Robot;\r\n        if (isRobot && isValid) {\r\n            setErrorMsg(false)\r\n            axios.post(\"https://jsonplaceholder.typicode.com/posts\", body)\r\n                .then((res) => { console.log(res); })\r\n                .catch((err) => { console.log(err); setServerErr(true) })\r\n            history.push(\"/smsverification\")\r\n        }\r\n        else { setErrorMsg(true) }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={RepasswordStyle.Login_container}>\r\n                <div className={RepasswordStyle.login_box_center}>\r\n\r\n                    <div className={RepasswordStyle.login_form}>\r\n                        <h3 className={RepasswordStyle.ws_mobile_logo}>E-TALIM</h3>\r\n                        <h3 className={RepasswordStyle.log_title}>Parolni tiklash</h3>\r\n                        <p className={RepasswordStyle.log_info}>Hurmatli foydalanuvchi, tizimdan foydalanish uchun telefon raqamingizni kiriting</p>\r\n                        {errorMsg && <p className={RepasswordStyle.repassword}>Malumotlarni to'liq kiriting</p>}\r\n                        {serverErr && <p className={RepasswordStyle.repassword}>Telefon raqam noto'g'ri... </p>}\r\n                        <div className={RepasswordStyle.input_container}>\r\n                            <div className={RepasswordStyle.input_label}>\r\n                                <span>+998</span>\r\n                            </div>\r\n                            <div className={RepasswordStyle.input_data}>\r\n                                <input type=\"tel\" placeholder=\"Telefon\" onChange={(e) => { setTelNumber(e.target.value) }} ></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={RepasswordStyle.input_container}>\r\n                            <div className={RepasswordStyle.input_label}>\r\n                                <span>{RandomNumberOne} + {RandomNumberTwo}</span>\r\n                            </div>\r\n                            <div className={RepasswordStyle.input_data}>\r\n                                <input type=\"text\" placeholder=\"Natijani kiriting\" onChange={(e) => { setRobot(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={RepasswordStyle.input_container}>\r\n                            <button className={RepasswordStyle.mobile_btn_log} onClick={submitData}>Parolni tiklash </button>\r\n                            <Link className={RepasswordStyle.mobile_btn_sing} to=\"/login\">Kirish</Link>\r\n                        </div>\r\n\r\n\r\n                        <div className={RepasswordStyle.chamge_language}>\r\n                            <img src={Uzbek} />\r\n                            <img src={English} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={RepasswordStyle.login_sign_up}>\r\n                        <h3 className={RepasswordStyle.ws_logo}>E-TALIM</h3>\r\n                        <p className={RepasswordStyle.ws_info}>Bu tizim orqali siz o'z bilim darajangizni va\r\n                            tendoshlaringiz bilimin tekshirib ko'rishga imkon\r\n                            beradi.\r\n                        </p>\r\n                        <Link className={RepasswordStyle.btn_singup} to=\"/singup\">Ro'yhatdan o'tish</Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Repassword;","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Login.js",["81","82","83","84"],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\ErrorMessage.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Question.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Data\\Category.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":4,"column":20,"nodeType":"91","messageId":"92","endLine":4,"endColumn":26},{"ruleId":"89","severity":1,"message":"93","line":7,"column":3,"nodeType":"91","messageId":"92","endLine":7,"endColumn":7},{"ruleId":"94","severity":1,"message":"95","line":34,"column":10,"nodeType":"96","endLine":34,"endColumn":12,"suggestions":"97"},{"ruleId":"89","severity":1,"message":"98","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"99","line":10,"column":29,"nodeType":"91","messageId":"92","endLine":10,"endColumn":47},{"ruleId":"89","severity":1,"message":"100","line":11,"column":29,"nodeType":"91","messageId":"92","endLine":11,"endColumn":47},{"ruleId":"101","severity":1,"message":"102","line":53,"column":68,"nodeType":"103","messageId":"104","endLine":53,"endColumn":69},{"ruleId":"89","severity":1,"message":"98","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"99","line":16,"column":29,"nodeType":"91","messageId":"92","endLine":16,"endColumn":47},{"ruleId":"89","severity":1,"message":"100","line":17,"column":29,"nodeType":"91","messageId":"92","endLine":17,"endColumn":47},{"ruleId":"105","severity":1,"message":"106","line":80,"column":29,"nodeType":"107","endLine":80,"endColumn":48},{"ruleId":"105","severity":1,"message":"106","line":81,"column":29,"nodeType":"107","endLine":81,"endColumn":50},{"ruleId":"89","severity":1,"message":"98","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"99","line":18,"column":29,"nodeType":"91","messageId":"92","endLine":18,"endColumn":47},{"ruleId":"89","severity":1,"message":"100","line":19,"column":29,"nodeType":"91","messageId":"92","endLine":19,"endColumn":47},{"ruleId":"101","severity":1,"message":"102","line":79,"column":64,"nodeType":"103","messageId":"104","endLine":79,"endColumn":65},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'time'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'useEffect' is defined but never used.","'setRandomNumberOne' is assigned a value but never used.","'setRandomNumberTwo' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [time]",{"range":"113","text":"114"},[1210,1212],"[time]"]