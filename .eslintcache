[{"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\index.js":"1","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\App.js":"2","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Quiz.js":"3","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\ResultTest.js":"4","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Result.js":"5","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Pages\\QuizSetting.js":"6","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\SmsVerification.js":"7","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\NewPassword.js":"8","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Singup.js":"9","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Repassword.js":"10","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Login.js":"11","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\ErrorMessage.js":"12","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Question.js":"13","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Data\\Category.js":"14","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\store.js":"15","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\reducers\\userReducers.js":"16","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\constans\\userConstans.js":"17","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\actions\\userAction.js":"18","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Pages\\Profile.js":"19","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\reducers\\testReducers.js":"20","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\constans\\testConstant.js":"21","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\actions\\testAction.js":"22","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Header.js":"23","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\SideDrawer.js":"24","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Table.js":"25"},{"size":477,"mtime":1632161891577,"results":"26","hashOfConfig":"27"},{"size":2493,"mtime":1632932902592,"results":"28","hashOfConfig":"27"},{"size":3964,"mtime":1632640363116,"results":"29","hashOfConfig":"27"},{"size":317,"mtime":1630558492609,"results":"30","hashOfConfig":"27"},{"size":1411,"mtime":1629726850098,"results":"31","hashOfConfig":"27"},{"size":240,"mtime":1632762080830,"results":"32","hashOfConfig":"27"},{"size":4459,"mtime":1632152855790,"results":"33","hashOfConfig":"27"},{"size":2736,"mtime":1631813303440,"results":"34","hashOfConfig":"27"},{"size":6204,"mtime":1632255879225,"results":"35","hashOfConfig":"27"},{"size":4601,"mtime":1631813303440,"results":"36","hashOfConfig":"27"},{"size":5036,"mtime":1632252026735,"results":"37","hashOfConfig":"27"},{"size":436,"mtime":1629467947067,"results":"38","hashOfConfig":"27"},{"size":2653,"mtime":1632419431479,"results":"39","hashOfConfig":"27"},{"size":1137,"mtime":1629462334937,"results":"40","hashOfConfig":"27"},{"size":822,"mtime":1632584466938,"results":"41","hashOfConfig":"27"},{"size":1097,"mtime":1632255028747,"results":"42","hashOfConfig":"27"},{"size":407,"mtime":1632255034021,"results":"43","hashOfConfig":"27"},{"size":2034,"mtime":1632597632818,"results":"44","hashOfConfig":"27"},{"size":8599,"mtime":1632936170282,"results":"45","hashOfConfig":"27"},{"size":968,"mtime":1632597972042,"results":"46","hashOfConfig":"27"},{"size":684,"mtime":1632638304934,"results":"47","hashOfConfig":"27"},{"size":1906,"mtime":1632640331959,"results":"48","hashOfConfig":"27"},{"size":3316,"mtime":1632936352814,"results":"49","hashOfConfig":"27"},{"size":2703,"mtime":1632761287851,"results":"50","hashOfConfig":"27"},{"size":0,"mtime":1632932839119,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1s8r0tg",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\index.js",[],["108","109"],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\App.js",["110"],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Quiz.js",["111","112"],"import React, { useState,useEffect } from 'react';\r\nimport { useHistory } from \"react-router\";\r\nimport { TextField, MenuItem, Button, makeStyles } from '@material-ui/core';\r\nimport categories from \"./Data/Category\";\r\nimport  ErrorMessage from \"./ErrorMessage\";\r\nimport quizStyle from \"../css/Quiz.module.css\";\r\nimport styles from '../css/quizmodule.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {listTest} from \"../actions/testAction\";\r\n\r\nconst useStyle = makeStyles({\r\n\r\n input:{\r\n  width:300,\r\n  fontSize:60,\r\n },\r\n})\r\n\r\nfunction Quiz({ name, setName, fetchQuestions }){\r\n\r\nconst dispatch = useDispatch();\r\nconst testList = useSelector((state) => state.testList)\r\nconst {tests, loading, error } = testList;\r\nlet quiz = tests? tests.map((item)=>item._id):\"xatolik\";\r\nconsole.log(quiz);\r\nconsole.log(loading);\r\nconsole.log(error);\r\nconst handlerClick =()=>{\r\n  dispatch(listTest())\r\n}\r\n// useEffect(() => {\r\n \r\n  \r\n// }, [dispatch])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const classes = useStyle()\r\n\r\n const [category, setCategory]=useState(\"\");\r\n const [difficult, setDifficult]=useState(\"\");\r\n//  const [error, setError]=useState(false);\r\n\r\n const history = useHistory();\r\n\r\n const handleSubmit=()=>{\r\n  if(!category || !difficult || !name){\r\n    // setError(true)\r\n    return;\r\n  }\r\n  else{\r\n    // setError(false)\r\n    console.log(category, difficult);\r\n    fetchQuestions(category, difficult);\r\n    history.push(\"/result\");\r\n  }\r\n\r\n\r\n\r\n }\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <div className={quizStyle.quiz_container}>\r\n          <nav className={quizStyle.top_navbar}>\r\n            <span className={quizStyle.logo_name}>\r\n              E-talim\r\n            </span>\r\n          </nav>\r\n          <button onClick={handlerClick}>Click me</button>\r\n          <h1>Quiz settings</h1>\r\n          <div className={quizStyle.grid_container}>\r\n            <div className={quizStyle.grid_item1}>\r\n\r\n            <TextField\r\n            className={classes.input}\r\n         style={{marginBottom:25}}\r\n         id=\"outlined-basic\" \r\n         label=\"Ismingiz\"\r\n          variant=\"outlined\" \r\n          onChange={((e)=>setName(e.target.value))}\r\n          value={name}\r\n          />\r\n\r\n           <TextField\r\n           select\r\n           style={{marginBottom:25, width:300}}\r\n           id=\"outlined-basic\" \r\n           label=\"Categoriyani tanlang\"\r\n           variant=\"outlined\"\r\n           onChange={((e)=>setCategory(e.target.value))}\r\n          \r\n           >\r\n             {categories.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.category}\r\n            </MenuItem>\r\n          ))}\r\n            </TextField>\r\n\r\n            <TextField\r\n           select\r\n           style={{marginBottom:25, width:300}}\r\n           id=\"outlined-basic\" \r\n           label=\"Qiyinlik darajasi\"\r\n           variant=\"outlined\"\r\n           onChange={((e)=>setDifficult(e.target.value))}\r\n           value={difficult}\r\n           >\r\n            \r\n            <MenuItem key=\"Easy\" value=\"easy\">\r\n              Easy\r\n            </MenuItem>\r\n            <MenuItem key=\"Medium\" value=\"medium\">\r\n              Medium\r\n            </MenuItem>\r\n            <MenuItem key=\"Hard\" value=\"hard\">\r\n              Hard\r\n            </MenuItem>\r\n            </TextField>\r\n\r\n            <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={handleSubmit}>\r\n              Boshlash\r\n            </Button>\r\n\r\n\r\n\r\n            </div>\r\n            <div className={quizStyle.grid_item1}>\r\n            <Button>Default</Button>\r\n      <Button className={styles.button}>Customized</Button>\r\n           </div>\r\n\r\n          </div>\r\n        <h1>Quiz settings</h1>\r\n        <div className={quizStyle.quiz_setting}>\r\n          {/* {error && <ErrorMessage> xato</ErrorMessage>} */}\r\n       \r\n           </div>\r\n\r\n           </div>\r\n              </>\r\n        \r\n    )\r\n}\r\nexport default Quiz;","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\ResultTest.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Result.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Pages\\QuizSetting.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\SmsVerification.js",["113","114"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport smsVerification from \"../css/SmsVerification.module.css\";\r\nimport Uzbek from \"../imgs/uz.svg\";\r\nimport English from \"../imgs/eng.svg\";\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport {useHistory, Link } from \"react-router-dom\";\r\n\r\nfunction SmsVerification(){\r\n\r\n\r\n    const history = useHistory();\r\n    const [smsCode, setsmsCode] = useState(\"\");\r\n    const [errorMsg, setErrorMsg] = useState(false);\r\n    const [serverErr, setServerErr] = useState(false);\r\n    const [minutes, setMinutes]=useState(0); \r\n    const [seconds, setSeconds]=useState(0);\r\n\r\n    let time = new Date().getTime()+300000;\r\n    useEffect(() => {\r\n       \r\n        const interval = setInterval(() => {\r\n            \r\n            let nowTime = new Date().getTime();\r\n            let distance =time - nowTime;\r\n            setMinutes(Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)));\r\n            setSeconds(Math.floor((distance % (1000 * 60)) / 1000))\r\n            if(distance <0){\r\n                clearInterval(interval)\r\n                setMinutes(0);\r\n                setSeconds(0);\r\n            }\r\n        }, 1000);\r\n      }, [0]);\r\n    let isVerify =()=>{\r\n        console.log(smsCode.length===5);\r\n        if(!isNaN(+smsCode) && smsCode.length===5) return true;\r\n        else { setErrorMsg(true);setServerErr(false); return false}\r\n    }\r\n    const sendCode =(e)=>{\r\n       let isSms = isVerify()\r\n       let body ={smsCode}\r\n        if(isSms){\r\n            setErrorMsg(false);\r\n            setServerErr(false);\r\n            axios.post(\"https://jsonplaceholder.typicode.com/posts\", body)\r\n            .then((res) => { console.log(res); \r\n                history.push(\"/newpassword\")\r\n            })\r\n            .catch((err) => { console.log(err); setServerErr(true);  history.push(\"/newpassword\") })\r\n        }\r\n        else{\r\n\r\n            console.log(\"Error occured...\");\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <>\r\n             <div className={smsVerification.Login_container}>\r\n                <div className={smsVerification.login_box_center}>\r\n\r\n                    <div className={smsVerification.login_form}>\r\n                        {/* <h3 className={smsVerification.ws_mobile_logo}>E-TALIM</h3> */}\r\n                        <h3 className={smsVerification.log_title}>{minutes}:{seconds}</h3>\r\n                        <p className={smsVerification.log_info}>Ro'yhatdan o'tish uchun ***6004 raqamiga SMS xabar yuborildi. Ushbu kodni kiriting.</p>\r\n                        {errorMsg && <p className={smsVerification.repassword}>Sms ko'dingizni to'g'riligini tekshiring...</p>}\r\n                        {serverErr && <p className={smsVerification.repassword}>Noto'g'ri sms kod... </p>}\r\n                        <div className={smsVerification.input_container}>\r\n                            <div className={smsVerification.input_label}>\r\n                                    <EmailIcon className={smsVerification.sms_icon} />                   \r\n                            </div>\r\n                            <div className={smsVerification.input_data}>\r\n                                <input type=\"tel\" placeholder=\"SMS kodni kiriting\" onChange={(e)=>{setsmsCode(e.target.value)}}></input>\r\n                            </div>\r\n                        </div>\r\n                        <button className={smsVerification.btn_login} onClick={sendCode}>Tasdiqlash</button>\r\n                        <div className={smsVerification.chamge_language}>\r\n                            <img src={Uzbek} alt=\"not fount flag of uzb\" />\r\n                            <img src={English} alt=\"not fount flag of eng\"/>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div> \r\n\r\n                    <div className={smsVerification.login_sign_up}>\r\n                                <h3 className={smsVerification.ws_logo}>E-TALIM</h3>\r\n                                <p className={smsVerification.ws_info}>Bu tizim orqali siz o'z bilim darajangizni va \r\n                                    tendoshlaringiz bilimin tekshirib ko'rishga imkon\r\n                                 beradi.\r\n                                </p>\r\n                                <Link to=\"/singup\" className={smsVerification.btn_singup}>Ro'yhatdan o'tish</Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default SmsVerification;","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\NewPassword.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Singup.js",["115","116","117","118","119","120","121","122","123","124"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport singupstyle from \"../css/Singup.module.css\";\r\nimport Uzbek from \"../imgs/uz.svg\";\r\nimport English from \"../imgs/eng.svg\";\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {register} from \"../actions/userAction\";\r\n\r\nfunction Singup() {\r\n    const [RandomNumberOne, setRandomNumberOne] = useState(Math.floor(Math.random() * (9 - 1 + 1)) + 1);\r\n    const [RandomNumberTwo, setRandomNumberTwo] = useState(Math.floor(Math.random() * (9 - 1 + 1)) + 1);\r\n    const [tell, setTell] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n    const [RePassword, setRePassword] = useState(\"\");\r\n    const [Robot, setRobot] = useState(0);\r\n    const [errMsg,setErrMsg]=useState(false);\r\n    const [serverErr,setServerErr]=useState(false);\r\n    let history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const {loading, error, userInfo} = userRegister;\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(\"/profile\");\r\n        }\r\n        console.log(userInfo);\r\n    },[history,userInfo])\r\n\r\n\r\n    let submitData = e => {\r\n        e.preventDefault();\r\n        dispatch(register(name, tell, pass))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={singupstyle.Login_container}>\r\n                <div className={singupstyle.login_box_center}>\r\n\r\n                    <div className={singupstyle.login_form}>\r\n                        {/* <h3 className={singupstyle.ws_mobile_logo}>E-TALIM</h3> */}\r\n                        <h3 className={singupstyle.log_title}>Ro'yhatdan o'tish</h3>\r\n                        <p className={singupstyle.log_info}>Hurmatli foydalanuvchi, tizimdan foydalanish uchun telefon raqamingizni kiriting</p>\r\n                    \r\n                        <div className={singupstyle.input_container, singupstyle.mobile_version}>\r\n                            <button className={singupstyle.mobile_btn_sing} >Ro'yhatdan o'tish</button>\r\n                            <Link className={singupstyle.mobile_btn_log} to=\"/login\">Kirish</Link>\r\n                        </div>\r\n                        {errMsg && <p className={singupstyle.repassword}>Iltimos malumotlaringizni to'g'riligini tekshiring... </p>}\r\n                        {serverErr && <p className={singupstyle.repassword}>Bu telefon raqam allaqachon ro'yhatdan o'tgan</p>}\r\n\r\n                        <div className={singupstyle.input_container}>\r\n                            <div className={singupstyle.input_label}>\r\n                                <span>Ism</span>\r\n                            </div>\r\n                            <div className={singupstyle.input_data}>\r\n                                <input type=\"text\"placeholder=\"Ismingiz\" onChange={(e) => { setName(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={singupstyle.input_container}>\r\n                            <div className={singupstyle.input_label}>\r\n                                <span>+998</span>\r\n                            </div>\r\n                            <div className={singupstyle.input_data}>\r\n                                <input type=\"_tel\"placeholder=\"Telefon\" onChange={(e) => { setTell(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className={singupstyle.input_container}>\r\n                            <div className={singupstyle.input_label}>\r\n                                <LockIcon className={singupstyle.lock_icon} />\r\n                            </div>\r\n                            <div className={singupstyle.input_data}>\r\n                                <input type=\"_password\" placeholder=\"Parol\" onChange={(e) => { setPass(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={singupstyle.input_container}>\r\n                            <div className={singupstyle.input_label}>\r\n                                <LockIcon className={singupstyle.lock_icon} />\r\n                            </div>\r\n                            <div className={singupstyle.input_data}>\r\n                                <input type=\"_password\" placeholder=\"Qayta kiriting parolni\" onChange={(e) => { setRePassword(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={singupstyle.input_container}>\r\n                            <div className={singupstyle.input_label}>\r\n                                <span>{RandomNumberOne} + {RandomNumberTwo}</span>\r\n                            </div>\r\n                            <div className={singupstyle.input_data}>\r\n                                <input type=\"text\" placeholder=\"Natija\" onChange={(e) => { setRobot(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button className={singupstyle.btn_login} onClick={submitData}>RO'YHATDAN O'TISH</button>\r\n                        <div className={singupstyle.chamge_language}>\r\n                            <img src={Uzbek} alt=\"uzbekistan\" />\r\n                            <img src={English} alt=\"English\" />\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className={singupstyle.login_sign_up}>\r\n                        <h3 className={singupstyle.ws_logo}>E-TALIM</h3>\r\n                        <p className={singupstyle.ws_info}>Bu tizim orqali siz o'z bilim darajangizni va\r\n                            tendoshlaringiz bilimin tekshirib ko'rishga imkon\r\n                            beradi.\r\n                        </p>\r\n                        <Link className={singupstyle.btn_singup} to=\"/login\">Kirish</Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Singup;","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Repassword.js",["125","126","127","128","129"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport RepasswordStyle from \"../css/Repassword.module.css\";\r\nimport Uzbek from \"../imgs/uz.svg\";\r\nimport English from \"../imgs/eng.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Repassword() {\r\n\r\n    const history = useHistory();\r\n    const [TelNumber, setTelNumber] = useState(\"\");\r\n    const [Robot, setRobot] = useState(0);\r\n    const [errorMsg, setErrorMsg] = useState(false);\r\n    const [serverErr, setServerErr] = useState(false);\r\n\r\n    const [RandomNumberOne, setRandomNumberOne] = useState(Math.floor(Math.random() * (9 - 1 + 1)) + 1);\r\n    const [RandomNumberTwo, setRandomNumberTwo] = useState(Math.floor(Math.random() * (9 - 1 + 1)) + 1);\r\n\r\n\r\n    const formValidation = () => {\r\n        if (!isNaN(+TelNumber) && TelNumber.length) {\r\n            return true\r\n        }\r\n        else { setErrorMsg(true); return false }\r\n    }\r\n\r\n    let submitData = e => {\r\n        e.preventDefault();\r\n        const isValid = formValidation();\r\n\r\n        let body = { Tell: TelNumber };\r\n        let isRobot = RandomNumberOne + RandomNumberTwo === +Robot;\r\n        if (isRobot && isValid) {\r\n            setErrorMsg(false)\r\n            axios.post(\"https://jsonplaceholder.typicode.com/posts\", body)\r\n                .then((res) => { console.log(res); })\r\n                .catch((err) => { console.log(err); setServerErr(true) })\r\n            history.push(\"/smsverification\")\r\n        }\r\n        else { setErrorMsg(true) }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={RepasswordStyle.Login_container}>\r\n                <div className={RepasswordStyle.login_box_center}>\r\n\r\n                    <div className={RepasswordStyle.login_form}>\r\n                        <h3 className={RepasswordStyle.ws_mobile_logo}>E-TALIM</h3>\r\n                        <h3 className={RepasswordStyle.log_title}>Parolni tiklash</h3>\r\n                        <p className={RepasswordStyle.log_info}>Hurmatli foydalanuvchi, tizimdan foydalanish uchun telefon raqamingizni kiriting</p>\r\n                        {errorMsg && <p className={RepasswordStyle.repassword}>Malumotlarni to'liq kiriting</p>}\r\n                        {serverErr && <p className={RepasswordStyle.repassword}>Telefon raqam noto'g'ri... </p>}\r\n                        <div className={RepasswordStyle.input_container}>\r\n                            <div className={RepasswordStyle.input_label}>\r\n                                <span>+998</span>\r\n                            </div>\r\n                            <div className={RepasswordStyle.input_data}>\r\n                                <input type=\"tel\" placeholder=\"Telefon\" onChange={(e) => { setTelNumber(e.target.value) }} ></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={RepasswordStyle.input_container}>\r\n                            <div className={RepasswordStyle.input_label}>\r\n                                <span>{RandomNumberOne} + {RandomNumberTwo}</span>\r\n                            </div>\r\n                            <div className={RepasswordStyle.input_data}>\r\n                                <input type=\"text\" placeholder=\"Natijani kiriting\" onChange={(e) => { setRobot(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={RepasswordStyle.input_container}>\r\n                            <button className={RepasswordStyle.mobile_btn_log} onClick={submitData}>Parolni tiklash </button>\r\n                            <Link className={RepasswordStyle.mobile_btn_sing} to=\"/login\">Kirish</Link>\r\n                        </div>\r\n\r\n\r\n                        <div className={RepasswordStyle.chamge_language}>\r\n                            <img src={Uzbek} />\r\n                            <img src={English} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={RepasswordStyle.login_sign_up}>\r\n                        <h3 className={RepasswordStyle.ws_logo}>E-TALIM</h3>\r\n                        <p className={RepasswordStyle.ws_info}>Bu tizim orqali siz o'z bilim darajangizni va\r\n                            tendoshlaringiz bilimin tekshirib ko'rishga imkon\r\n                            beradi.\r\n                        </p>\r\n                        <Link className={RepasswordStyle.btn_singup} to=\"/singup\">Ro'yhatdan o'tish</Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Repassword;","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Login.js",["130","131","132","133","134","135","136","137"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport classes from '../css/login.module.css';\r\nimport Uzbek from \"../imgs/uz.svg\";\r\nimport English from \"../imgs/eng.svg\";\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../actions/userAction\";\r\n\r\n\r\n\r\nfunction Login() {\r\n    let history =useHistory();\r\n    const [tell, setTelNumber] = useState(\"\");\r\n    const [pass, setPassword] = useState(\"\");\r\n    const [Robot, setRobot] = useState(0);\r\n    const [errorMsg, setErrorMsg] = useState(false);\r\n    const [serverErr, setServerErr] = useState(false);\r\n    const [RandomNumberOne, setRandomNumberOne] = useState(Math.floor(Math.random() * (9 - 1 + 1)) + 1);\r\n    const [RandomNumberTwo, setRandomNumberTwo] = useState(Math.floor(Math.random() * (9 - 1 + 1)) + 1);\r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const {error, loading, userInfo} = userLogin;\r\n    console.log(error);\r\n    \r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(\"/profile\");\r\n        }\r\n    },[history, userInfo]);\r\n\r\n    let submitData = async(e) => {\r\n        e.preventDefault();\r\n       \r\n        dispatch(login(tell,pass));\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.login_container}>\r\n                <div className={classes.login_box_center}>\r\n\r\n                    <form className={classes.login_form}>\r\n                        {/* <h3 className={classes.ws_mobile_logo}>E-TALIM</h3> */}\r\n                        <h3 className={classes.log_title}>Tizimga Kirish</h3>\r\n                        <p className={classes.log_info}>Hurmatli foydalanuvchi, tizimdan foydalanish uchun telefon raqamingizni kiriting</p>\r\n\r\n                        <div className={classes.input_container, classes.mobile_version}>\r\n                            <button className={classes.mobile_btn_log}>Kirish</button>\r\n                            <Link className={classes.mobile_btn_sing} to=\"/singup\">Ro'yhatdan o'tish</Link>\r\n                        </div>\r\n\r\n                        {errorMsg && <p className={classes.repassword}>Malumotlarni to'liq kiriting</p>}\r\n                        {serverErr && <p className={classes.repassword}>Parol yoki login noto'g'ri... </p>}\r\n                        <div className={classes.input_container}>\r\n                            <div className={classes.input_label}>\r\n                                <span>+998</span>\r\n                            </div>\r\n                            <div className={classes.input_data}>\r\n                                <input type=\"tel\" value={tell} placeholder=\"Telefon\" onChange={(e) => { setTelNumber(e.target.value) }} ></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes.input_container}>\r\n                            <div className={classes.input_label}>\r\n                                <LockIcon className={classes.lock_icon} />\r\n                            </div>\r\n                            <div className={classes.input_data}>\r\n                                <input type=\"password\" value={pass} placeholder=\"Parol\" onChange={(e) => { setPassword(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes.input_container}>\r\n                            <div className={classes.input_label}>\r\n                                <span>{RandomNumberOne + \" + \" + RandomNumberTwo}</span>\r\n                            </div>\r\n                            <div className={classes.input_data}>\r\n                                <input type=\"text\" placeholder=\"Natija\" onChange={(e) => { setRobot(e.target.value) }}></input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button className={classes.btn_login} onClick={submitData}>KIRISH</button>\r\n                        <Link className={classes.repassword} to=\"/repassword\">Parolni tiklash</Link>\r\n                        <div className={classes.change_language}>\r\n                            <img src={Uzbek} alt=\"Uzbek flags\" />\r\n                            <img src={English} alt=\"British flags\" />\r\n                        </div>\r\n\r\n\r\n\r\n                    </form>\r\n\r\n                    <div className={classes.login_sign_up}>\r\n                        <h3 className={classes.ws_logo}>E-TALIM</h3>\r\n                        <p className={classes.ws_info}>Bu tizim orqali siz o'z bilim darajangizni va\r\n                            tendoshlaringiz bilimin tekshirib ko'rishga imkon\r\n                            beradi.\r\n                        </p>\r\n                        <Link className={classes.btn_singup} to=\"/singup\">Ro'yhatdan o'tish</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Login;","C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\ErrorMessage.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Question.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Data\\Category.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\store.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\reducers\\userReducers.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\constans\\userConstans.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\actions\\userAction.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Pages\\Profile.js",["138","139","140","141","142","143","144","145","146"],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\reducers\\testReducers.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\constans\\testConstant.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\actions\\testAction.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Header.js",["147","148","149","150","151","152","153","154"],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\SideDrawer.js",[],"C:\\Users\\Jamacoder\\Desktop\\E-ta'lim\\my-app\\src\\Components\\Table.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":11,"column":8,"nodeType":"161","messageId":"162","endLine":11,"endColumn":23},{"ruleId":"159","severity":1,"message":"163","line":1,"column":26,"nodeType":"161","messageId":"162","endLine":1,"endColumn":35},{"ruleId":"159","severity":1,"message":"164","line":5,"column":9,"nodeType":"161","messageId":"162","endLine":5,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":34,"column":10,"nodeType":"167","endLine":34,"endColumn":13,"suggestions":"168"},{"ruleId":"165","severity":1,"message":"169","line":34,"column":11,"nodeType":"170","endLine":34,"endColumn":12},{"ruleId":"159","severity":1,"message":"171","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":13},{"ruleId":"159","severity":1,"message":"172","line":12,"column":29,"nodeType":"161","messageId":"162","endLine":12,"endColumn":47},{"ruleId":"159","severity":1,"message":"173","line":13,"column":29,"nodeType":"161","messageId":"162","endLine":13,"endColumn":47},{"ruleId":"159","severity":1,"message":"174","line":17,"column":12,"nodeType":"161","messageId":"162","endLine":17,"endColumn":22},{"ruleId":"159","severity":1,"message":"175","line":18,"column":12,"nodeType":"161","messageId":"162","endLine":18,"endColumn":17},{"ruleId":"159","severity":1,"message":"176","line":19,"column":19,"nodeType":"161","messageId":"162","endLine":19,"endColumn":28},{"ruleId":"159","severity":1,"message":"177","line":20,"column":22,"nodeType":"161","messageId":"162","endLine":20,"endColumn":34},{"ruleId":"159","severity":1,"message":"178","line":26,"column":12,"nodeType":"161","messageId":"162","endLine":26,"endColumn":19},{"ruleId":"159","severity":1,"message":"179","line":26,"column":21,"nodeType":"161","messageId":"162","endLine":26,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":52,"column":68,"nodeType":"182","messageId":"183","endLine":52,"endColumn":69},{"ruleId":"159","severity":1,"message":"163","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"172","line":16,"column":29,"nodeType":"161","messageId":"162","endLine":16,"endColumn":47},{"ruleId":"159","severity":1,"message":"173","line":17,"column":29,"nodeType":"161","messageId":"162","endLine":17,"endColumn":47},{"ruleId":"184","severity":1,"message":"185","line":80,"column":29,"nodeType":"186","endLine":80,"endColumn":48},{"ruleId":"184","severity":1,"message":"185","line":81,"column":29,"nodeType":"186","endLine":81,"endColumn":50},{"ruleId":"159","severity":1,"message":"171","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":13},{"ruleId":"159","severity":1,"message":"175","line":17,"column":12,"nodeType":"161","messageId":"162","endLine":17,"endColumn":17},{"ruleId":"159","severity":1,"message":"187","line":18,"column":22,"nodeType":"161","messageId":"162","endLine":18,"endColumn":33},{"ruleId":"159","severity":1,"message":"177","line":19,"column":23,"nodeType":"161","messageId":"162","endLine":19,"endColumn":35},{"ruleId":"159","severity":1,"message":"172","line":20,"column":29,"nodeType":"161","messageId":"162","endLine":20,"endColumn":47},{"ruleId":"159","severity":1,"message":"173","line":21,"column":29,"nodeType":"161","messageId":"162","endLine":21,"endColumn":47},{"ruleId":"159","severity":1,"message":"178","line":25,"column":19,"nodeType":"161","messageId":"162","endLine":25,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":49,"column":64,"nodeType":"182","messageId":"183","endLine":49,"endColumn":65},{"ruleId":"159","severity":1,"message":"188","line":22,"column":7,"nodeType":"161","messageId":"162","endLine":22,"endColumn":11},{"ruleId":"159","severity":1,"message":"189","line":29,"column":7,"nodeType":"161","messageId":"162","endLine":29,"endColumn":12},{"ruleId":"159","severity":1,"message":"190","line":37,"column":11,"nodeType":"161","messageId":"162","endLine":37,"endColumn":19},{"ruleId":"159","severity":1,"message":"191","line":39,"column":9,"nodeType":"161","messageId":"162","endLine":39,"endColumn":22},{"ruleId":"192","severity":1,"message":"193","line":98,"column":17,"nodeType":"194","messageId":"195","endLine":98,"endColumn":29},{"ruleId":"192","severity":1,"message":"193","line":117,"column":17,"nodeType":"194","messageId":"195","endLine":117,"endColumn":29},{"ruleId":"192","severity":1,"message":"193","line":135,"column":17,"nodeType":"194","messageId":"195","endLine":135,"endColumn":29},{"ruleId":"192","severity":1,"message":"193","line":153,"column":17,"nodeType":"194","messageId":"195","endLine":153,"endColumn":29},{"ruleId":"192","severity":1,"message":"193","line":171,"column":17,"nodeType":"194","messageId":"195","endLine":171,"endColumn":29},{"ruleId":"159","severity":1,"message":"196","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":25},{"ruleId":"159","severity":1,"message":"197","line":12,"column":8,"nodeType":"161","messageId":"162","endLine":12,"endColumn":14},{"ruleId":"159","severity":1,"message":"198","line":13,"column":8,"nodeType":"161","messageId":"162","endLine":13,"endColumn":12},{"ruleId":"159","severity":1,"message":"199","line":14,"column":8,"nodeType":"161","messageId":"162","endLine":14,"endColumn":16},{"ruleId":"159","severity":1,"message":"200","line":15,"column":8,"nodeType":"161","messageId":"162","endLine":15,"endColumn":12},{"ruleId":"159","severity":1,"message":"201","line":38,"column":11,"nodeType":"161","messageId":"162","endLine":38,"endColumn":15},{"ruleId":"159","severity":1,"message":"202","line":39,"column":11,"nodeType":"161","messageId":"162","endLine":39,"endColumn":22},{"ruleId":"159","severity":1,"message":"203","line":42,"column":11,"nodeType":"161","messageId":"162","endLine":42,"endColumn":22},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'SmsVerification' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'ErrorMessage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'time'. Either include it or remove the dependency array.","ArrayExpression",["206"],"The 0 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'axios' is defined but never used.","'setRandomNumberOne' is assigned a value but never used.","'setRandomNumberTwo' is assigned a value but never used.","'RePassword' is assigned a value but never used.","'Robot' is assigned a value but never used.","'setErrMsg' is assigned a value but never used.","'setServerErr' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setErrorMsg' is assigned a value but never used.","'Item' is assigned a value but never used.","'Input' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'logoutHandler' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'AccountCircleIcon' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Fade' is defined but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},"Update the dependencies array to be: [time]",{"range":"209","text":"210"},[1210,1213],"[time]"]